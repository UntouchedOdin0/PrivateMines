plugins {
    id 'java'
    id 'java-library'
    id 'maven-publish'
    id 'io.github.gradle-nexus.publish-plugin' version "1.1.0"
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'org.jetbrains.kotlin.jvm' version '1.8.0'
}

group 'me.untouchedodin0.privatemines'
version '5.1.2'

def devBuild = true

if (devBuild) {
    version = version + "-DEV"
}

repositories {
    mavenLocal()
    mavenCentral()

    maven { url = 'https://repo.papermc.io/repository/maven-public/' }
    maven { url = 'https://maven.enginehub.org/repo/' }
    maven { url = 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url = 'https://repo.rapture.pw/repository/maven-releases/' }
    maven { url = 'https://repo.rapture.pw/repository/maven-snapshots/' }
    maven { url = 'https://repo.codemc.org/repository/maven-public/' }
    maven { url = 'https://redempt.dev' }
    maven { url = 'https://hub.jeff-media.com/nexus/repository/jeff-media-public/' }
    maven { url = 'https://jitpack.io' }
    maven { url = 'https://libraries.minecraft.net/' }
    maven { url = 'https://repo.convallyria.com/releases' }
    maven { url = 'https://repo.minebench.de/' }
    maven { url = 'https://repo.dmulloy2.net/repository/public/' }
    maven { url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/' }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    compileOnly 'org.spigotmc:spigot-api:1.13.2-R0.1-SNAPSHOT'
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Core:2.5.0'
    compileOnly 'com.fastasyncworldedit:FastAsyncWorldEdit-Bukkit:2.4.8'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.7'
    compileOnly 'com.grinderwolf:slimeworldmanager-api:2.7.0-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7.1'
    compileOnly 'com.mojang:authlib:1.11'
    compileOnly("net.dv8tion:JDA:5.0.0-alpha.12") {
        exclude module: 'opus-java'
    }

    compileOnly 'com.comphenix.protocol:ProtocolLib:4.8.0'
    compileOnly 'me.clip:placeholderapi:2.11.2'

    compileOnly files('libs/UltraPrisonCore-1.12.7.14-RELEASE.jar')
    compileOnly files('libs/AutoSellAPI-1.2.0.jar')

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.github.Redempt:RedLib:6.5.8'
    implementation 'com.github.Redempt:Crunch:1.1.2'
    implementation 'io.papermc:paperlib:1.0.7'
    implementation 'org.bstats:bstats-bukkit:3.0.0'
    implementation 'net.kyori:adventure-text-minimessage:4.12.0'
    implementation 'net.kyori:adventure-platform-bukkit:4.2.0'
    implementation 'com.google.code.gson:gson:2.10'

    implementation project(':WorldBorder')
}

jar { from('resources') { include 'META-INF/services/*.*' } }

shadowJar {
    mergeServiceFiles()
    minimize()
    relocate 'org.codemc.worldguardwrapper', 'me.untouchedodin0.privatemines.worldguardwrapper'
    relocate 'com.google.gson', 'me.untouchedodin0.privatemines.gson'
    relocate "io.papermc.lib", "me.untouchedodin0.privatemines.paperlib"
    relocate 'de.themoep.minedown', 'me.untouchedodin0.privatemines.minedown'
    relocate 'org.bstats', 'me.untouchedodin0.bstats'
    relocate 'net.kyori', 'me.untouchedodin0.adventure'
}

task copyTo_DevServerOld(type: Copy) {
    from shadowJar
    into "E:/Coding/Spigot Test Servers/1.18 Private Mines (Paper and FAWE)/plugins"
}

task copyTo_DevServer(type: Copy) {
    from shadowJar
    into "E:/Coding/Spigot Test Servers/1.18.2 Privates Mines (Paper)/plugins"
}


task copyTo_DevServer1_19(type: Copy) {
    from shadowJar
    into "E:/Coding/Spigot Test Servers/1.19.2 Privates Mines (Paper)/plugins"
}


task copyTo_SWM(type: Copy) {
    from shadowJar
    into "E:/Coding/Spigot Test Servers/1.18 Slime World Manager (Paper)/plugins"
}


//publishing {
//    repositories {
//        maven {
//            var releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-releases"
//            var snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-snapshots"
//
//            if (version.toString().endsWith("SNAPSHOT")) {
//                url = uri(snapshotsRepoUrl)
//            } else {
//                url = uri(releasesRepoUrl)
//            }
//
//            credentials {
//                username = project.findProperty("mavenUser")?.toString() ?: System.getenv("MAVEN_USER")
//                password = project.findProperty("mavenPassword")?.toString() ?: System.getenv("MAVEN_PASSWORD")
//            }
//        }
//
//        publications {
//                from components.java
//            }
//        }
//    }

//
//publishing {
//    repositories {
//        maven {
//            url = ""
////            def releasesRepoUrl = "https://repo.bristermitten.me/repository/maven-public/"
//            //"https://s01.oss.sonatype.org/"
////            def snapshotsRepoUrl = "https://repo.bristermitten.me/repository/maven-public/"
////            url = releasesRepoUrl // version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
//
//            credentials {
//                username = "odin"//System.getenv('MAVEN_USER')
//                password = "kj;BP{}`[mF\\5x&2" //System.getenv('MAVEN_PASSWORD')
//            }
//        }
//    }
//    publications {
////        shadow(MavenPublication) {
////            publication -> project.shadow.component(publication)
////        }
//        mavenJava(MavenPublication) {
//            from components.java
////                artifact sourceJar
//        }
//    }
//}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "17"
    }
}